import telebot
from telebot import types
import os
from dotenv import load_dotenv
import logging

load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

TOKEN = os.getenv('BOT_TOKEN')  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
CHANNEL_ID = -1002641394600  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

if TOKEN is None:
    print("–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")
    exit()

bot = telebot.TeleBot(TOKEN)

user_states = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_id: {'state': 'manager' –∏–ª–∏ 'question', 'message_id': message_id}}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')

# –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
IMAGE_PATH = 'images/imageslogo.png'
IMAGE_TUMBLER_ON = 'images/tumbler_on.png'
IMAGE_TUMBLER_OFF = 'images/tumbler_off.png'
IMAGE_KASSAVROZETKY = 'images/kassavrozetky.png'
RSA_CERT_PROBLEM_IMAGE = 'images/rsa_cert_problem.jpg'  # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è RSA
UTM_DB_PROBLEM_IMAGE = 'images/utm_db_problem.jpg'  # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –ø—Ä–æ–±–ª–µ–º —Å –ë–î
RSA_PC_STEP1_IMAGE = 'images/rsa_pc_step1.jpg'  # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 1
RSA_PC_STEP2_IMAGE = 'images/rsa_pc_step2.jpg'
RSA_PC_STEP3_IMAGE = 'images/rsa_pc_step3.jpg'
RSA_PC_STEP4_IMAGE = 'images/rsa_pc_step4.jpg'
RSA_PC_STEP5_IMAGE = 'images/rsa_pc_step5.jpg'
EVOTOR_RSA_STEP1_IMAGE = 'images/evotor_rsa_step1.jpg'
EVOTOR_RSA_STEP2_IMAGE = 'images/evotor_rsa_step2.jpg'
EVOTOR_RSA_STEP3_IMAGE = 'images/evotor_rsa_step3.jpg'
REINSTALL_UTM_STEP1_IMAGE = 'images/reinstall_utm_step1.jpg'
REMOVE_UTM_STEP1_IMAGE = 'images/remove_utm_step1.jpg'

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
BATTERY_INFO_FILE = 'battery_info.txt'
ST2F_INSTRUCTION_FILE = 'st2finstrukt.txt'

# –ß–∏—Ç–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞—Ö –∏–∑ —Ñ–∞–π–ª–∞
try:
    with open(BATTERY_INFO_FILE, 'r', encoding='utf-8') as f:
        battery_info = f.read()
except FileNotFoundError:
    battery_info = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
    print(f"–û—à–∏–±–∫–∞: –§–∞–π–ª '{BATTERY_INFO_FILE}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
except Exception as e:
    battery_info = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞—Ö: {e}"
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ '{BATTERY_INFO_FILE}': {e}")

# –ß–∏—Ç–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –°–¢2–§ –∏–∑ —Ñ–∞–π–ª–∞
try:
    with open(ST2F_INSTRUCTION_FILE, 'r', encoding='utf-8') as f:
        st2f_instruction = f.read()
except FileNotFoundError:
    st2f_instruction = "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –°–¢2–§ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
    print(f"–û—à–∏–±–∫–∞: –§–∞–π–ª '{ST2F_INSTRUCTION_FILE}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
except Exception as e:
    st2f_instruction = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –°–¢2–§: {e}"
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ '{ST2F_INSTRUCTION_FILE}': {e}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è message_id
messages_to_delete = []

# –§–ª–∞–≥, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ ST2F
in_st2f_section = False


def delete_messages(call):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ messages_to_delete."""
    global messages_to_delete
    chat_id = call.message.chat.id
    logging.debug(f"–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ {chat_id}. –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_to_delete}")
    try:
        for message_id in messages_to_delete:
            bot.delete_message(chat_id, message_id)
            logging.debug(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id} –≤ —á–∞—Ç–µ {chat_id}")
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id} –≤ —á–∞—Ç–µ {chat_id}: {e}")
    messages_to_delete = []
    logging.debug(f"–°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {messages_to_delete}")


@bot.message_handler(commands=['start'])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    markup = types.InlineKeyboardMarkup()
    start_button = types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å', callback_data='show_main_menu')  # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å"
    markup.add(start_button)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    if os.path.exists(IMAGE_PATH):
        try:
            with open(IMAGE_PATH, 'rb') as photo:
                sent_message = bot.send_photo(message.chat.id, photo, caption="üñêÔ∏è–ü—Ä–∏–≤–µ—Ç! –Ø –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ \"–ê–¥–º–∏–Ω38\" –ø–æ–º–æ–≥—É –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –µ—Å–ª–∏ —É –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏—Ç—å—Å—è, —Ç–æ –ø–µ—Ä–µ–¥–∞–º –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏üëå.  –î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –≤ –º–µ–Ω—é –Ω–∏–∂–µüëáüëáüëá", reply_markup=markup)
                messages_to_delete.append(sent_message.message_id)
                logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ —Å message_id {sent_message.message_id}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
            sent_message = bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=markup)
            messages_to_delete.append(sent_message.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å message_id {sent_message.message_id}")
    else:
        sent_message = bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.", reply_markup=markup)  # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        messages_to_delete.append(sent_message.message_id)
        logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ñ–∞–π–ª–∞ —Å message_id {sent_message.message_id}")
        sent_message = bot.send_message(message.chat.id, "üñêÔ∏è–ü—Ä–∏–≤–µ—Ç! –Ø –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ \"–ê–¥–º–∏–Ω38\" –ø–æ–º–æ–≥—É –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –µ—Å–ª–∏ —É –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏—Ç—å—Å—è, —Ç–æ –ø–µ—Ä–µ–¥–∞–º –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏üëå.  –î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –≤ –º–µ–Ω—é –Ω–∏–∂–µüëáüëáüëá", reply_markup=markup)
        messages_to_delete.append(sent_message.message_id)
        logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å message_id {sent_message.message_id}")


@bot.callback_query_handler(func=lambda call: call.data == 'show_main_menu')
def show_main_menu(call):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º–∏."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ù–∞—á–∞—Ç—å' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è

    markup = types.InlineKeyboardMarkup()
    evotor_button = types.InlineKeyboardButton('–≠–≤–æ—Ç–æ—Ä', callback_data='evotor_menu')
    sigma_button = types.InlineKeyboardButton('Sigma', callback_data='sigma_menu')
    atol_button = types.InlineKeyboardButton('–ê—Ç–æ–ª', callback_data='atol_menu')
    roznica_1—Å_button = types.InlineKeyboardButton('1C –†–æ–∑–Ω–∏—Ü–∞', callback_data='—Ä–æ–∑–Ω–∏—Ü–∞_1—Å_menu')
    –¥—Ä—É–≥–æ–µ_button = types.InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data='–¥—Ä—É–≥–æ–µ_menu')
    svyaz_s_menedzherami_button = types.InlineKeyboardButton('–°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏', callback_data='—Å–≤—è–∑—å_—Å_–º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏_menu')

    markup.add(evotor_button)
    markup.add(sigma_button, atol_button, roznica_1—Å_button, –¥—Ä—É–≥–æ–µ_button, svyaz_s_menedzherami_button)

    sent_message = bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è:", reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)
    logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è' —Å message_id {sent_message.message_id}")
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'evotor_menu')
def evotor_menu(call):
    """–ú–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –≠–≤–æ—Ç–æ—Ä —Å Inline-–∫–Ω–æ–ø–∫–∞–º–∏."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω —Ä–∞–∑–¥–µ–ª '–≠–≤–æ—Ç–æ—Ä' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    markup = types.InlineKeyboardMarkup(row_width=2)  # row_width=2: 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥

    button1 = types.InlineKeyboardButton('–ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∫–∞—Å—Å–∞', callback_data='no_power')
    button2 = types.InlineKeyboardButton('–ù–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –£–¢–ú', callback_data='utm_problem')
    button3 = types.InlineKeyboardButton('–ù–µ—Ç —Å–µ—Ç–∏', callback_data='no_network')
    button4 = types.InlineKeyboardButton('–°–≤–æ–π –≤–æ–ø—Ä–æ—Å', callback_data='custom_question')
    button5 = types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='show_main_menu')  # –ù–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ

    markup.add(button1, button2, button3, button4, button5)
    sent_message = bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –≠–≤–æ—Ç–æ—Ä:", reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)
    logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –≠–≤–æ—Ç–æ—Ä' —Å message_id {sent_message.message_id}")
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'no_power')
def no_power_menu(call):
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ –≠–≤–æ—Ç–æ—Ä–∞."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω —Ä–∞–∑–¥–µ–ª '–ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∫–∞—Å—Å–∞' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    markup = types.InlineKeyboardMarkup(row_width=2)

    button1 = types.InlineKeyboardButton('–°–¢3–§, –°–¢5–§, –°–¢51–§, 10', callback_data='evotor_model_info')
    button2 = types.InlineKeyboardButton('–°–¢2–§', callback_data='st2f_info')
    button3 = types.InlineKeyboardButton('Power', callback_data='power_info')
    button4 = types.InlineKeyboardButton('–≠–≤–æ—Ç–æ—Ä6', callback_data='evotor6_info')
    button5 = types.InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º –≠–≤–æ—Ç–æ—Ä', callback_data='problem_list')
    back_button = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='evotor_menu')
    main_menu_button = types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='show_main_menu')  # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"

    markup.add(button1, button2, button3, button4, button5, back_button, main_menu_button)

    sent_message = bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å —Å–≤–æ–µ–≥–æ –≠–í–û–¢–û–†–∞üëá\n–ú–æ–¥–µ–ª—å –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –°–º–∞—Ä—Ç-—Ç–µ—Ä–º–∏–Ω–∞–ª–∞", reply_markup=markup)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –º–æ–¥–µ–ª–∏
    messages_to_delete.append(sent_message.message_id)
    logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –≠–≤–æ—Ç–æ—Ä–∞' —Å message_id {sent_message.message_id}")
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'problem_list')
def problem_list_menu(call):
    """–ú–µ–Ω—é —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–±–ª–µ–º –≠–≤–æ—Ç–æ—Ä."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω —Ä–∞–∑–¥–µ–ª '–°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º –≠–≤–æ—Ç–æ—Ä' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    markup = types.InlineKeyboardMarkup(row_width=2)

    button1 = types.InlineKeyboardButton('–ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∫–∞—Å—Å–∞', callback_data='no_power')
    button2 = types.InlineKeyboardButton('–ù–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –£–¢–ú', callback_data='utm_problem')
    button3 = types.InlineKeyboardButton('–ù–µ—Ç —Å–µ—Ç–∏', callback_data='no_network')
    button4 = types.InlineKeyboardButton('–°–≤–æ–π –≤–æ–ø—Ä–æ—Å', callback_data='custom_question')
    main_menu_button = types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='show_main_menu')
    back_button = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='no_power')  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"

    markup.add(button1, button2, button3, button4, main_menu_button, back_button)

    sent_message = bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:", reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)
    logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É' —Å message_id {sent_message.message_id}")
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'evotor_model_info')
def evotor_model_info(call):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –°–¢3–§, –°–¢5–§, –°–¢51–§, 10."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å '–°–¢3–§, –°–¢5–§, –°–¢51–§, 10' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)
    markup = types.InlineKeyboardMarkup(row_width=1)
    button1 = types.InlineKeyboardButton("–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏", callback_data="no_power")
    button2 = types.InlineKeyboardButton("–ü—Ä–æ–±–ª–µ–º—ã –≠–í–û–¢–û–†–æ–≤", callback_data="problem_list")
    button3 = types.InlineKeyboardButton("–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", callback_data="show_main_menu")
    markup.add(button1, button2, button3)

    sent_message = bot.send_message(call.message.chat.id, battery_info, reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)
    logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞—Ö —Å message_id {sent_message.message_id}")
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'st2f_info')
def st2f_info(call):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –°–¢2–§."""
    global in_st2f_section
    in_st2f_section = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –º—ã –≤ —Ä–∞–∑–¥–µ–ª–µ ST2F
    logging.debug(f"–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å '–°–¢2–§' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –±—ã–ª–∏) - –ü–ï–†–ï–î –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤—ã—Ö!
    delete_messages(call)

    markup = types.InlineKeyboardMarkup(row_width=1)
    button1 = types.InlineKeyboardButton("–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏", callback_data="no_power")
    button2 = types.InlineKeyboardButton("–ü—Ä–æ–±–ª–µ–º—ã –≠–í–û–¢–û–†–æ–≤", callback_data="problem_list")
    button3 = types.InlineKeyboardButton("–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", callback_data="show_main_menu")
    markup.add(button1, button2, button3)

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —à–∞–≥–∞–º:"
        sent_message = bot.send_message(call.message.chat.id, "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —à–∞–≥–∞–º:")
        messages_to_delete.append(sent_message.message_id)
        logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —à–∞–≥–∞–º' —Å message_id {sent_message.message_id}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        with open(IMAGE_TUMBLER_ON, 'rb') as photo_on:
            sent_photo = bot.send_photo(call.message.chat.id, photo_on, caption="–¢—É–º–±–ª–µ—Ä –≤–∫–ª—é—á–µ–Ω")
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–¢—É–º–±–ª–µ—Ä –≤–∫–ª—é—á–µ–Ω' —Å message_id {sent_photo.message_id}")

        with open(IMAGE_TUMBLER_OFF, 'rb') as photo_off:
            sent_photo = bot.send_photo(call.message.chat.id, photo_off, caption="–¢—É–º–±–ª–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω")
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–¢—É–º–±–ª–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω' —Å message_id {sent_photo.message_id}")

        with open(IMAGE_KASSAVROZETKY, 'rb') as photo_rozetka:
            sent_photo = bot.send_photo(call.message.chat.id, photo_rozetka, caption="–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Å—Å—ã –∫ —Ä–æ–∑–µ—Ç–∫–µ")
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Å—Å—ã –∫ —Ä–æ–∑–µ—Ç–∫–µ' —Å message_id {sent_photo.message_id}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        sent_instruction = bot.send_message(call.message.chat.id, st2f_instruction, reply_markup=markup)
        messages_to_delete.append(sent_instruction.message_id)
        logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –°–¢2–§ —Å message_id {sent_instruction.message_id}")

    except Exception as e:
        bot.send_message(call.message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: {e}", reply_markup=markup)

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–°–¢2–§"
    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'power_info')
def power_info(call):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Power."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å 'Power' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call) # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    markup = types.InlineKeyboardMarkup(row_width=1)
    button1 = types.InlineKeyboardButton("–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏", callback_data="no_power")
    button2 = types.InlineKeyboardButton("–ü—Ä–æ–±–ª–µ–º—ã –≠–í–û–¢–û–†–æ–≤", callback_data="problem_list")
    button3 = types.InlineKeyboardButton("–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", callback_data="show_main_menu")
    markup.add(button1, button2, button3)
    text = """–ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –≠–≤–æ—Ç–æ—Ä Power
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –≠–≤–æ—Ç–æ—Ä –∫ —ç–ª–µ–∫—Ç—Ä–æ—Å–µ—Ç–∏ (–≤ —Ä–æ–∑–µ—Ç–∫—É). –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ —Ä–æ–∑–µ—Ç–∫—É, –Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–æ –æ—Ç–∫–ª—é—á–∏—Ç–µ –µ–≥–æ –æ—Ç —Å–µ—Ç–∏ –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ —Ç–æ—Ä—Ü–µ –≠–≤–æ—Ç–æ—Ä–∞.

–ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä"""  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    sent_message = bot.send_message(call.message.chat.id, text, reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)
    logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Power —Å message_id {sent_message.message_id}")
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'evotor6_info')
def evotor6_info(call):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –≠–≤–æ—Ç–æ—Ä6."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å '–≠–≤–æ—Ç–æ—Ä6' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)
    text = """–ï—Å–ª–∏ –≠–≤–æ—Ç–æ—Ä 6 –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —É –Ω–µ–≥–æ —Ä–∞–∑—Ä—è–¥–∏–ª–∏—Å—å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã. –ß—Ç–æ–±—ã –∑–∞—Ä—è–¥–∏—Ç—å –∏—Ö:

–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≠–≤–æ—Ç–æ—Ä –∫ —ç–ª–µ–∫—Ç—Ä–æ—Å–µ—Ç–∏.
–ü–æ–¥–æ–∂–¥–∏—Ç–µ 40 –º–∏–Ω—É—Ç.
–û—Ç–∫–ª—é—á–∏—Ç–µ –≠–≤–æ—Ç–æ—Ä –æ—Ç —Å–µ—Ç–∏ –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.
–ü–æ–≤—Ç–æ—Ä—è–π—Ç–µ, –ø–æ–∫–∞ –≠–≤–æ—Ç–æ—Ä –Ω–µ –≤–∫–ª—é—á–∏—Ç—Å—è (2-3 —Ä–∞–∑–∞).

–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä"""  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    markup = types.InlineKeyboardMarkup(row_width=1)
    button_vybor_modeli = types.InlineKeyboardButton("–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏", callback_data="no_power")
    button_problemy_evotorov = types.InlineKeyboardButton("–ü—Ä–æ–±–ª–µ–º—ã –≠–í–û–¢–û–†–æ–≤", callback_data="problem_list")
    button_glavnaya_stranica = types.InlineKeyboardButton("–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", callback_data="show_main_menu")
    markup.add(button_vybor_modeli, button_problemy_evotorov, button_glavnaya_stranica)

    sent_message = bot.send_message(call.message.chat.id, text, reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)
    logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≠–≤–æ—Ç–æ—Ä6 —Å message_id {sent_message.message_id}")
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'utm_problem')
def utm_problem_menu(call):
    """–ú–µ–Ω—é –ø—Ä–æ–±–ª–µ–º —Å –£–¢–ú."""
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω —Ä–∞–∑–¥–µ–ª '–ù–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –£–¢–ú' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è

    # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö
    sent_message = bot.send_message(call.message.chat.id, "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∏—Ö —Ä–µ—à–µ–Ω–∏–µ:")
    messages_to_delete.append(sent_message.message_id)

    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å RSA-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º
    try:
        with open(RSA_CERT_PROBLEM_IMAGE, 'rb') as rsa_photo:
            sent_photo = bot.send_photo(call.message.chat.id, rsa_photo, caption="–ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å RSA-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.")
            messages_to_delete.append(sent_photo.message_id)
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º RSA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.")

    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ —Å –ë–î
    try:
        with open(UTM_DB_PROBLEM_IMAGE, 'rb') as db_photo:
            sent_photo = bot.send_photo(call.message.chat.id, db_photo, caption="–ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è —É–¥–∞–ª–µ–Ω–∏–µ –ë–î –∏–ª–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –£–¢–ú.")
            messages_to_delete.append(sent_photo.message_id)
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º —Å –ë–î –£–¢–ú.")

    markup = types.InlineKeyboardMarkup(row_width=1)  # –ö–Ω–æ–ø–∫–∏ –≤ —Å—Ç–æ–ª–±–∏–∫

    button1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å RSA –Ω–∞ –ü–ö', callback_data='rsa_pc')
    button2 = types.InlineKeyboardButton('–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å RSA –Ω–∞ –≠–≤–æ—Ç–æ—Ä–µ', callback_data='rsa_evotor')
    button3 = types.InlineKeyboardButton('–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –£–¢–ú', callback_data='reinstall_utm')
    button4 = types.InlineKeyboardButton('–£–¥–∞–ª–µ–Ω–∏–µ –£–¢–ú', callback_data='remove_utm')
    button5 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–±–ª–µ–º–∞–º –≠–≤–æ—Ç–æ—Ä', callback_data='evotor_menu')  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"

    markup.add(button1, button2, button3, button4, button5)

    sent_keyboard = bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    messages_to_delete.append(sent_keyboard.message_id)
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'rsa_pc')
def rsa_pc_info(call):
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç '–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å RSA –Ω–∞ –ü–ö' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)

    # –®–∞–≥ 1
    step1_text = """–®–∞–≥ 1. –£–¥–∞–ª–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –∫–ª—é—á RSA
–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∫–ª—é—á RSA, —É–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–π –∫–ª—é—á.

–ö–ª—é—á–µ–≤–∞—è –ø–∞—Ä–∞ –ì–û–°–¢ –†
–ï—Å–ª–∏ –Ω–∞ –≠–¶–ü, –ø–æ–º–∏–º–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ì–û–°–¢ –∏ RSA, –∑–∞–ø–∏—Å–∞–Ω–∞ –ö–ª—é—á–µ–≤–∞—è –ø–∞—Ä–∞ –ì–û–°–¢ –†, –µ—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ RSA, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –º–æ–∂–µ—Ç –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç–µ —Å –ï–ì–ê–ò–°. 

–ö–ª—é—á–µ–≤–∞—è –ø–∞—Ä–∞ –†—É—Ç–æ–∫–µ–Ω —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö –∫–ª—é—á–µ–π:

–ü—Ä–∏–≤–∞—Ç–Ω—ã–π ‚Äî —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
–ü—É–±–ª–∏—á–Ω—ã–π ‚Äî –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–ª—é—á, –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö."""
    sent_message = bot.send_message(call.message.chat.id, step1_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 1
    try:
        with open(RSA_PC_STEP1_IMAGE, 'rb') as step1_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step1_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 1' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 1.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {RSA_PC_STEP1_IMAGE}")

    # –®–∞–≥ 2
    step2_text = """–®–∞–≥ 2. –í—ã–ø—É—Å—Ç–∏—Ç–µ –Ω–æ–≤—ã–π RSA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ –ï–ì–ê–ò–°
–í—ã–ø—É—Å—Ç–∏—Ç—å RSA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ –ï–ì–ê–ò–° –º–æ–∂–Ω–æ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏: –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –£–¢–ú –Ω–∞ –ü–ö –ª–∏–±–æ –ø—Ä—è–º–æ –Ω–∞ –≤–∞—à–µ–º –≠–≤–æ—Ç–æ—Ä–µ.

–ö–∞–∫ –≤—ã–ø—É—Å—Ç–∏—Ç—å RSA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ¬´–£–¢–ú¬ª –Ω–∞ –ü–ö
–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ RSA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –Ω–∞ –∫–ª—é—á–µ–≤–æ–º –Ω–æ—Å–∏—Ç–µ–ª–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –ø–æ–¥–ø–∏—Å—å.

–ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –≤—ã–ø—É—Å–∫—É RSA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞, —Å–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–æ–º–ø—å—é—Ç–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´–£–¢–ú¬ª —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –ï–ì–ê–ò–°.

–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–π –Ω–æ—Å–∏—Ç–µ–ª—å —Å –£–ö–≠–ü –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ –∫ –≤–∞—à–µ–º—É –∫–æ–º–ø—å—é—Ç–µ—Ä—É.
–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´–£–¢–ú¬ª‚Äé.
–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ¬´–£–¢–ú¬ª –Ω–∞–∂–º–∏—Ç–µ –î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞."""
    sent_message = bot.send_message(call.message.chat.id, step2_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 3
    try:
        with open(RSA_PC_STEP2_IMAGE, 'rb') as step2_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step2_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 2' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 2.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {RSA_PC_STEP2_IMAGE}")

         # –®–∞–≥ 3
    step3_text = "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ï–ì–ê–ò–°.\n–í—ã–±–µ—Ä–∏—Ç–µ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ò–ü. –î–∞–∂–µ –µ—Å–ª–∏ —É –≤–∞—Å ¬´–û–û–û¬ª."
    sent_message = bot.send_message(call.message.chat.id, step3_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 4
    try:
        with open(RSA_PC_STEP3_IMAGE, 'rb') as step3_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step3_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 3' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 3.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {RSA_PC_STEP3_IMAGE}")

        # –®–∞–≥ 4
    step4_text = "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—ã–¥–∞—á—É –∫–ª—é—á–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ï–ì–ê–ò–°."
    sent_message = bot.send_message(call.message.chat.id, step4_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 5
    try:
        with open(RSA_PC_STEP4_IMAGE, 'rb') as step4_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step4_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 4' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 4.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {RSA_PC_STEP4_IMAGE}")

        # –®–∞–≥ 5
    step5_text = "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ –µ–≥–æ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–ª—é—á–µ–≤–æ–π –Ω–æ—Å–∏—Ç–µ–ª—å."
    sent_message = bot.send_message(call.message.chat.id, step5_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 6
    try:
        with open(RSA_PC_STEP5_IMAGE, 'rb') as step5_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step5_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 5' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 5.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {RSA_PC_STEP5_IMAGE}")

        # –®–∞–≥ 6
    step6_text = """–í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á–µ–≤–æ–π –Ω–æ—Å–∏—Ç–µ–ª—å –≤ –≠–≤–æ—Ç–æ—Ä.
–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ï–ì–ê–ò–° ‚Üí –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –£–¢–ú.
–ì–æ—Ç–æ–≤–æ! –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –£–¢–ú ‚Äî –ù–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ —Ä–∞–±–æ—Ç–µ."""
    

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é"
        # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é"
    markup = types.InlineKeyboardMarkup()
    button_back = types.InlineKeyboardButton("–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é", callback_data="utm_problem")
    markup.add(button_back)

    logging.error("–ö–Ω–æ–ø–∫–∞ '–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é' –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    sent_message = bot.send_message(call.message.chat.id, step6_text , reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)

    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'rsa_evotor')
def rsa_evotor_info(call):
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç '–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å RSA –Ω–∞ –≠–≤–æ—Ç–æ—Ä–µ' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)

    # –®–∞–≥ 1
    step1_text = """–ö–∞–∫ –≤—ã–ø—É—Å—Ç–∏—Ç—å RSA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ –≠–≤–æ—Ç–æ—Ä–µ

–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ RSA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –Ω–∞ –∫–ª—é—á–µ–≤–æ–º –Ω–æ—Å–∏—Ç–µ–ª–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –ø–æ–¥–ø–∏—Å—å."""
    sent_message = bot.send_message(call.message.chat.id, step1_text)
    messages_to_delete.append(sent_message.message_id)

    # –®–∞–≥ 2
    step2_text = """–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–π –Ω–æ—Å–∏—Ç–µ–ª—å —Å –£–ö–≠–ü –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ –∫ –≤–∞—à–µ–º—É –≠–≤–æ—Ç–æ—Ä—É.

–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ï–ì–ê–ò–° ‚Üí –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –£–¢–ú ‚Üí –ù–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ.
–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –£–¢–ú."""
    sent_message = bot.send_message(call.message.chat.id, step2_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 3
    try:
        with open(EVOTOR_RSA_STEP1_IMAGE, 'rb') as step1_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step1_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 1' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 1.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {EVOTOR_RSA_STEP1_IMAGE}")
    
    # –®–∞–≥ 3
    step3_text = "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∞ –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ï–ì–ê–ò–°."
    sent_message = bot.send_message(call.message.chat.id, step3_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 6
    try:
        with open(EVOTOR_RSA_STEP2_IMAGE, 'rb') as step2_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step2_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 2' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 2.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {EVOTOR_RSA_STEP2_IMAGE}")

    # –®–∞–≥ 4
    step4_text = "–í—ã–±–µ—Ä–∏—Ç–µ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ò–ü."
    sent_message = bot.send_message(call.message.chat.id, step4_text)
    messages_to_delete.append(sent_message.message_id)

    # –®–∞–≥ 5
    step5_text = "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—ã–¥–∞—á—É –∫–ª—é—á–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ï–ì–ê–ò–°."
    sent_message = bot.send_message(call.message.chat.id, step5_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 7
    try:
        with open(EVOTOR_RSA_STEP3_IMAGE, 'rb') as step3_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step3_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 3' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 3.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {EVOTOR_RSA_STEP3_IMAGE}")

    # –®–∞–≥ 6
    step6_text = "–ù–∞–∂–º–∏—Ç–µ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ –µ–≥–æ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–ª—é—á–µ–≤–æ–π –Ω–æ—Å–∏—Ç–µ–ª—å."
    sent_message = bot.send_message(call.message.chat.id, step6_text)
    messages_to_delete.append(sent_message.message_id)

    # –®–∞–≥ 7
    step7_text = "–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ï–ì–ê–ò–° ‚Üí –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –£–¢–ú ‚Üí –ù–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ.\n\n*–í–∞–∂–Ω–æ:\n–í –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø—É—Å–∫–∞ –£–¢–ú –ø—Ä–∏ –≤–≤–æ–¥–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞. –í –∏–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –∞–ª–∫–æ–≥–æ–ª—è –±—É–¥–µ—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å –æ—à–∏–±–∫–∞.*"

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é"
    markup = types.InlineKeyboardMarkup()
    button_back = types.InlineKeyboardButton("–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é", callback_data="utm_problem")
    markup.add(button_back)

    sent_message = bot.send_message(call.message.chat.id, step7_text, reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)

    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data == 'reinstall_utm')
def reinstall_utm_info(call):
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç '–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –£–¢–ú' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 1
    try:
        with open(REINSTALL_UTM_STEP1_IMAGE, 'rb') as step1_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step1_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 1' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 1.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {REINSTALL_UTM_STEP1_IMAGE}")

 # –®–∞–≥ 1
    step1_text = """–ï—Å–ª–∏ –£–¢–ú –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∑–∞–π—Ç–∏ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ï–ì–ê–ò–° ‚Üí –£–¢–ú –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∏ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –º–æ–≥—É—Ç –Ω–µ –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å—Å—è. –ö–ü–ü –¥–ª—è —é—Ä–ª–∏—Ü –ö–ü–ü –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–∂–µ –≤–≤–æ–¥–∏—Ç—å –≤—Ä—É—á–Ω—É—é. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ:

–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞ –≠–≤–æ—Ç–æ—Ä–µ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ï–ì–ê–ò–°.

–ù–∞–∂–º–∏—Ç–µ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –£–¢–ú. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ, —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –£–¢–ú –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫."""

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é"
    markup = types.InlineKeyboardMarkup()
    button_back = types.InlineKeyboardButton("–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é", callback_data="utm_problem")
    markup.add(button_back)

    sent_message = bot.send_message(call.message.chat.id, step1_text, reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)

    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == 'remove_utm')
def remove_utm_info(call):
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç '–£–¥–∞–ª–µ–Ω–∏–µ –£–¢–ú' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)

    # –®–∞–≥ 1
    step1_text = """–£–¥–∞–ª–µ–Ω–∏–µ –£–¢–ú –Ω—É–∂–Ω–æ, –µ—Å–ª–∏ –≤—ã –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∞–ª–∫–æ–≥–æ–ª—å, –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –£–¢–ú, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏, –∏–ª–∏ –µ—Å–ª–∏ –£–¢–ú –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è."""
    sent_message = bot.send_message(call.message.chat.id, step1_text)
    messages_to_delete.append(sent_message.message_id)

    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è —à–∞–≥–∞ 2
    try:
        with open(REMOVE_UTM_STEP1_IMAGE, 'rb') as step1_photo:
            sent_photo = bot.send_photo(call.message.chat.id, step1_photo)
            messages_to_delete.append(sent_photo.message_id)
            logging.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ '–®–∞–≥ 1' —Å message_id {sent_photo.message_id}")
    except FileNotFoundError:
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è —à–∞–≥–∞ 1.")
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª: {REMOVE_UTM_STEP1_IMAGE}")

    # –®–∞–≥ 2
    step2_text = """–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞ –≠–≤–æ—Ç–æ—Ä–µ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ï–ì–ê–ò–°.
–ù–∞–∂–º–∏—Ç–µ –£–¥–∞–ª–∏—Ç—å –£–¢–ú."""

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é"
    markup = types.InlineKeyboardMarkup()
    button_back = types.InlineKeyboardButton("–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é", callback_data="utm_problem")
    markup.add(button_back)

    sent_message = bot.send_message(call.message.chat.id, step2_text, reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)

    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data == 'no_network')
def no_network_menu(call):
    global in_st2f_section
    in_st2f_section = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    logging.debug(f"–í—ã–±—Ä–∞–Ω —Ä–∞–∑–¥–µ–ª '–ù–µ—Ç —Å–µ—Ç–∏' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {call.from_user.id}")
    delete_messages(call)

    # –®–∞–≥ 1
    step1_text = """–ó–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è –≠–≤–æ—Ç–æ—Ä–∞ –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã –∏ –≤ –ø–æ—è–≤–∏–≤—à–µ–º—Å—è –æ–∫–Ω–µ –≤—ã–±–µ—Ä–∏—Ç–µ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å.
–ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–π–¥–∏—Ç–µ –≤ ‚Äé–ï—â—ë ‚Üí ‚Äé–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí ‚Äé–ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö ‚Üí ‚Äé–ú–æ–±–∏–ª—å–Ω—ã–µ, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –≤–∫–ª—é—á–µ–Ω–∞, –∞ –õ–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞ –æ—Ç–∫–ª—é—á—ë–Ω.
–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ï—â—ë ‚Üí ‚Äé–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí ‚ÄéWi-Fi –∏ –≤—ã–∫–ª—é—á–∏—Ç–µ Wi-Fi.
–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–±—Ä–æ—Å —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫. –î–ª—è —ç—Ç–æ–≥–æ –æ—Ç–∫—Ä–æ–π—Ç–µ ‚Äé–ï—Å–ª–∏ 3G –Ω–µ –ª–æ–≤–∏—Ç, –∞ –ª–æ–≤–∏—Ç E, –∑–∞–π–¥–∏—Ç–µ –≤ –ï—â—ë ‚Üí ‚Äé–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö ‚Üí –ú–æ–±–∏–ª—å–Ω—ã–µ. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —Å —Ç—Ä–µ–º—è —Ç–æ—á–∫–∞–º–∏, –≤—ã–±–µ—Ä–∏—Ç–µ ‚Äé–ú–æ–±–∏–ª—å–Ω—ã–µ —Å–µ—Ç–∏. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–µ—Ç–∏ 2G. –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—Ç–¥–∞–ª—ë–Ω–Ω–æ–º —Ä–µ–≥–∏–æ–Ω–µ, –≤–∫–ª—é—á–∏—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–æ—É–º–∏–Ω–≥ –≤ —Ç–æ–º –∂–µ –º–µ–Ω—é. –ï—Å–ª–∏ —Å–∏–≥–Ω–∞–ª–∞ —Å–µ—Ç–∏ —Å–æ–≤—Å–µ–º –Ω–µ—Ç, –∑–∞–º–µ–Ω–∏—Ç–µ —Å–º–∞—Ä—Ç-–∫–∞—Ä—Ç—É –Ω–∞ –¥—Ä—É–≥—É—é –∏–∑ –∫–æ–º–ø–ª–µ–∫—Ç–∞ –≠–≤–æ—Ç–æ—Ä.
–ï—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –ø–æ–º–æ–≥–ª–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä.
–í–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–º–∞—Ä—Ç-–∫–∞—Ä—Ç–æ–π –≠–≤–æ—Ç–æ—Ä, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ª—É—á—à–µ–º—É —Å–∏–≥–Ω–∞–ª—É —Å–≤—è–∑–∏."""

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é"
    markup = types.InlineKeyboardMarkup()
    button_back = types.InlineKeyboardButton("–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é", callback_data="evotor_menu")
    markup.add(button_back)

    sent_message = bot.send_message(call.message.chat.id, step1_text, reply_markup=markup)
    messages_to_delete.append(sent_message.message_id)

    bot.answer_callback_query(call.id)


def show_sigma_menu(call):
    bot.send_message(call.message.chat.id, "–†–∞–∑–¥–µ–ª Sigma –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.answer_callback_query(call.id)


def show_atol_menu(call):
    bot.send_message(call.message.chat.id, "–†–∞–∑–¥–µ–ª –ê—Ç–æ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.answer_callback_query(call.id)


def show_—Ä–æ–∑–Ω–∏—Ü–∞_1—Å_menu(call):
    bot.send_message(call.message.chat.id, "–†–∞–∑–¥–µ–ª 1–° –†–æ–∑–Ω–∏—Ü–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.answer_callback_query(call.id)


def show_–¥—Ä—É–≥–æ–µ_menu(call):
    bot.send_message(call.message.chat.id, "–†–∞–∑–¥–µ–ª –î—Ä—É–≥–æ–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data == 'contact_managers_menu')
def contact_managers_menu(call):
    markup = create_contact_managers_menu() # type: ignore
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data == 'show_phone')
def show_phone(call):
    bot.send_message(call.message.chat.id, "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (XXX) XXX-XX-XX")
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data == 'ask_question')
def ask_question(call):
    user_id = call.from_user.id
    print(f"ask_question: user_id = {user_id}")
    bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º:")
    user_states[user_id] = {'state': 'manager', 'message_id': call.message.id}
    print(f"ask_question: user_states = {user_states}")
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data == 'own_question')
def own_question(call):
    user_id = call.from_user.id
    bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:")
    user_states[user_id] = {'state': 'question', 'message_id': call.message.id}
    bot.answer_callback_query(call.id)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    print(f"handle_message: message.from_user.id = {message.from_user.id}") # –î–æ–±–∞–≤—å—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    user_id = message.from_user.id
    if user_id in user_states:
        print(f"handle_message: user_id in user_states") # –î–æ–±–∞–≤—å—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        state = user_states[user_id]['state']
        print(f"handle_message: state = {state}") # –î–æ–±–∞–≤—å—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        if state == 'manager':
            print(f"handle_message: state == 'manager'") # –î–æ–±–∞–≤—å—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            caption = f"–í–æ–ø—Ä–æ—Å –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.username} ({message.from_user.id}):"
        elif state == 'question':
            print(f"handle_message: state == 'question'") # –î–æ–±–∞–≤—å—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            caption = f"–°–≤–æ–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.username} ({message.from_user.id}):"
        else:
            caption = f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.username} ({message.from_user.id}):"

        try:
            bot.forward_message(CHANNEL_ID, message.chat.id, message.message_id)
            print(f"handle_message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª")
        except Exception as e:
            bot.send_message(user_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            print(f"handle_message: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ: {e}")
        finally:
            del user_states[user_id] #—Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            bot.send_message(message.chat.id, "–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    else:
        print(f"handle_message: user_id NOT in user_states") # –î–æ–±–∞–≤—å—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        pass  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ Inline-–∫–Ω–æ–ø–∫–∏."""
    global messages_to_delete, in_st2f_section

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏ –≤ messages_to_delete
    messages_to_delete.append(call.message.message_id)

    #  –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ—à–ª–∏ –ª–∏ –º—ã –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ ST2F –≤ –¥—Ä—É–≥–æ–π
    if in_st2f_section:
        # –ï—Å–ª–∏ –¥–∞, —Ç–æ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        delete_messages(call)
        in_st2f_section = False

    if call.data == 'evotor_menu':
        evotor_menu(call)  # –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ "–≠–≤–æ—Ç–æ—Ä"
    elif call.data == 'show_main_menu':
        show_main_menu(call)  # –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif call.data == 'sigma_menu':
        show_sigma_menu(call)
    elif call.data == 'atol_menu':
        show_atol_menu(call)
    elif call.data == '—Ä–æ–∑–Ω–∏—Ü–∞_1—Å_menu':
        show_—Ä–æ–∑–Ω–∏—Ü–∞_1—Å_menu(call)
    elif call.data == '–¥—Ä—É–≥–æ–µ_menu':
        show_–¥—Ä—É–≥–æ–µ_menu(call)
    elif call.data == 'no_power':
        no_power_menu(call)  # –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–µ–π
    elif call.data == 'problem_list':
        problem_list_menu(call)  # –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º
    elif call.data == 'custom_question':
        text = "–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –≤–∞–º –ø–æ–º–æ—á—å."
        bot.send_message(call.message.chat.id, text)
        # TODO: –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    bot.answer_callback_query(call.id)  # –£–±–∏—Ä–∞–µ–º "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')


if __name__ == '__main__':
    bot.infinity_polling()